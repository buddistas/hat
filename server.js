const express = require('express');
const path = require('path');

// –ò–º–ø–æ—Ä—Ç –Ω–∞—à–∏—Ö –∫–ª–∞—Å—Å–æ–≤
const repositoryFactory = require('./src/infrastructure/RepositoryFactory');
const GameService = require('./src/infrastructure/GameService');
const WebSocketHandler = require('./src/infrastructure/WebSocketHandler');
const StatsService = require('./src/infrastructure/StatsService');
const mongoConnection = require('./src/infrastructure/MongoConnection');

// –ò–º–ø–æ—Ä—Ç Telegram-–±–æ—Ç–∞
const TelegramBotService = require('./src/telegram/TelegramBot');
const TelegramApiService = require('./src/telegram/TelegramApi');
const telegramConfig = require('./telegram-config');

const app = express();
const PORT = process.env.PORT || 4000;

// Middleware –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON
app.use(express.json());

// –†–∞–∑–¥–∞—á–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
app.use(express.static('public'));
// Serve Sound assets (mp3 files)
app.use('/Sound', express.static('Sound'));

// –°–æ–∑–¥–∞–Ω–∏–µ HTTP —Å–µ—Ä–≤–µ—Ä–∞
const server = app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ —á–µ—Ä–µ–∑ —Ñ–∞–±—Ä–∏–∫—É
const wordRepository = repositoryFactory.createWordRepository();
const gameRepository = repositoryFactory.createGameRepository();
const statsRepository = repositoryFactory.createStatsRepository();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebSocket –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
const webSocketHandler = new WebSocketHandler(server, null);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
const gameService = new GameService(wordRepository, gameRepository, webSocketHandler);
const statsService = new StatsService(statsRepository, webSocketHandler);
webSocketHandler.statsService = statsService;
gameService.statsService = statsService;

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º gameService –≤ WebSocketHandler
webSocketHandler.gameService = gameService;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram-–±–æ—Ç–∞
let telegramBot = null;
let telegramApi = null;

if (telegramConfig.TELEGRAM_BOT_TOKEN) {
  try {
    console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram-–±–æ—Ç–∞...');
    telegramBot = new TelegramBotService(telegramConfig.TELEGRAM_BOT_TOKEN, gameService, statsService);
    telegramApi = new TelegramApiService(gameService, statsService);
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º API —Ä–æ—É—Ç—ã –¥–ª—è Telegram-–±–æ—Ç–∞
    app.use('/', telegramApi.getRouter());
    
    console.log('ü§ñ Telegram-–±–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram-–±–æ—Ç–∞:', error.message);
    console.log('‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ Telegram-–±–æ—Ç–∞');
    
    // –°–æ–∑–¥–∞–µ–º API –±–µ–∑ –±–æ—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    telegramApi = new TelegramApiService(gameService, statsService);
    app.use('/', telegramApi.getRouter());
  }
} else {
  console.log('‚ö†Ô∏è TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, Telegram-–±–æ—Ç –æ—Ç–∫–ª—é—á–µ–Ω');
  
  // –°–æ–∑–¥–∞–µ–º API –±–µ–∑ –±–æ—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  telegramApi = new TelegramApiService(gameService, statsService);
  app.use('/', telegramApi.getRouter());
}

// –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
console.log('üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤:', repositoryFactory.getConfigurationInfo());
// –ü—Ä–æ—Å—Ç–µ–π—à–∏–µ API –¥–ª—è —á—Ç–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
app.get('/api/stats/player/:playerKey', (req, res) => {
  const data = statsService.getPlayerStats(req.params.playerKey);
  if (!data) return res.status(404).json({ error: 'not_found' });
  res.json(data);
});

app.get('/api/stats/leaderboard/:metric', (req, res) => {
  const data = statsService.getLeaderboard(req.params.metric);
  res.json(data);
});

app.get('/api/stats/session/:gameId', (req, res) => {
  console.log(`API /api/stats/session/${req.params.gameId} - –∑–∞–ø—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–µ—Å—Å–∏–∏`);
  const snap = statsService.getSessionSnapshot();
  console.log('API - session snapshot:', snap);
  
  if (!snap || snap.gameId !== req.params.gameId) {
    console.log(`API - —Å–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ó–∞–ø—Ä–æ—à–µ–Ω–Ω—ã–π gameId: ${req.params.gameId}, —Ç–µ–∫—É—â–∏–π: ${snap?.gameId || 'null'}`);
    return res.status(404).json({ error: 'not_found' });
  }
  
  console.log('API - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏');
  res.json(snap);
});

// Graceful shutdown
process.on('SIGINT', async () => {
  console.log('–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞...');
  
  // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Telegram-–±–æ—Ç–∞
  if (telegramBot) {
    try {
      telegramBot.stopPolling();
      console.log('Telegram-–±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ Telegram-–±–æ—Ç–∞:', error.message);
    }
  }
  
  // –ó–∞–∫—Ä—ã–≤–∞–µ–º WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
  webSocketHandler.close();
  
  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
  try {
    await mongoConnection.disconnect();
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –æ—Ç MongoDB:', error.message);
  }
  
  // –ó–∞–∫—Ä—ã–≤–∞–µ–º HTTP —Å–µ—Ä–≤–µ—Ä
  server.close(() => {
    console.log('HTTP —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    process.exit(0);
  });
  
  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥, –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–∫—Ä—ã–ª—Å—è
  setTimeout(() => {
    console.log('–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...');
    process.exit(1);
  }, 5000);
});
